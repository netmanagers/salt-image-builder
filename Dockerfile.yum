ARG DISTRO_NAME
ARG DISTRO_VERSION
FROM $DISTRO_NAME:$DISTRO_VERSION

LABEL maintainer="javier@netmanagers.com.ar"

# Both args before the `FROM` are repeated here so that they can be used below, as required
# https://docs.docker.com/engine/reference/builder/#understand-how-arg-and-from-interact
ARG DISTRO_NAME
ARG DISTRO_VERSION
ARG SALT_INSTALL_METHOD
ARG SALT_VERSION
ARG PYTHON_VERSION
ARG EXTRA_PACKAGES=""
# Provide packages used by `kitchen-docker` to speed up testing
# These are now expected by the `ssf` customised `kitchen-docker` being used:
# - https://gitlab.com/saltstack-formulas/infrastructure/kitchen-docker/-/compare/master...ssf
ARG KITCHEN_DOCKER_PACKAGES="curl openssh-clients openssh-server sudo which"
ARG PKGS="${KITCHEN_DOCKER_PACKAGES} git net-tools python3-pip systemd udev ${EXTRA_PACKAGES}"

SHELL ["/bin/bash", "-x", "-o", "pipefail", "-c"]
# hadolint ignore=SC1075,SC2016,DL3033,DL3041
RUN if [[ "${DISTRO_NAME}" = "centos" ]]; then \
      # Install EPEL repo for `centos`
      yum -y install epel-release; \
    fi \
 && yum -y install ${PKGS} \
 && if [ "${SALT_VERSION}" != "tiamat" ]; then \
      # Install Salt using the bootstrap script (removing the 10 seconds delay to cancel the bootstrap)
      curl -L https://raw.githubusercontent.com/saltstack/salt-bootstrap/develop/bootstrap-salt.sh | \
      sed -e '/^\s\+echowarn "You have 10 seconds to cancel and stop the bootstrap process..."/,+2d' | \
      sh -s -- -XUdfPD -x python$PYTHON_VERSION $SALT_INSTALL_METHOD $SALT_VERSION; \
    else \
      # Prepare the `TIAMAT_DISTRO_NAME`
      if [ "${DISTRO_NAME}" = "amazonlinux" ]; then \
        TIAMAT_DISTRO_NAME="amazon"; \
      else \
        TIAMAT_DISTRO_NAME="redhat"; \
      fi; \
      echo "${TIAMAT_DISTRO_NAME}"; \
      # Prepare the `TIAMAT_DISTRO_VERSION`
      if [ "${DISTRO_VERSION}" = "stream8" ]; then \
        TIAMAT_DISTRO_VERSION="8"; \
      else \
        TIAMAT_DISTRO_VERSION="${DISTRO_VERSION}"; \
      fi; \
      echo "${TIAMAT_DISTRO_VERSION}"; \
      # Prepare the `EPEL_PACKAGE_NAME`
      if [ "${DISTRO_NAME}" = "oraclelinux" ]; then \
        EPEL_PACKAGE_NAME="oracle-epel-release-el${DISTRO_VERSION}"; \
      else \
        EPEL_PACKAGE_NAME="epel-release"; \
      fi; \
      echo "${EPEL_PACKAGE_NAME}"; \
      # Prepare the repo
      rpm --import https://repo.saltproject.io/salt-dev/py3/${TIAMAT_DISTRO_NAME}/${TIAMAT_DISTRO_VERSION}/x86_64/SALTSTACK-GPG-KEY.pub; \
      curl -fsSL https://repo.saltproject.io/salt-dev/py3/${TIAMAT_DISTRO_NAME}/${TIAMAT_DISTRO_VERSION}/x86_64/dev.repo | tee /etc/yum.repos.d/salt-dev.repo; \
      # Install the package
      yum clean expire-cache; \
      yum -y install "${EPEL_PACKAGE_NAME}" salt-minion; \
    fi \
 && if command -v systemctl; then \
      systemctl disable salt-minion.service > /dev/null 2>&1; \
    elif [ -f "/etc/init.d/salt-minion" ]; then \
      /sbin/chkconfig salt-minion off; \
    fi \
    # Remove unnecessary getty and udev targets that result in high CPU usage when using
    # multiple containers with Molecule or Kitchen (https://github.com/ansible/molecule/issues/1104)
 && rm -rf /var/cache/{salt,yum} \
           /usr/lib/systemd/system/systemd*udev* \
           /usr/lib/systemd/system/getty.target \
           /tmp/* \
 && (find / ! -path "/{proc,sys,dev}" -name "*.pyc"; \
     find / ! -path "/{proc,sys,dev}" -name "__pycache__"; \
     find /var/log -type f) \
    | grep -v ^/proc | xargs rm -rf \
    # Also obscure any `getty` binaries (https://github.com/moby/moby/issues/4040#issuecomment-339022455)
 && cp /bin/true /sbin/agetty \
 && if [ -e /sbin/mingetty ]; then cp /bin/true /sbin/mingetty; fi
